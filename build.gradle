
group 'com.ddb.mugen'
version '1.0-SNAPSHOT'

ext{
    bootVersion="1.2.7.RELEASE"
    javaVersion="1.8"
    springVersion="4.1.8.RELEASE"
}

buildscript {

    repositories {
        mavenLocal()
        jcenter()
        maven { url "http://192.168.0.169:8081/nexus/content/groups/public/" }
    }
    //http://docs.spring.io/spring-boot/docs/current/reference/html/build-tool-plugins-gradle-plugin.html
    dependencies {
        classpath(
                "org.springframework.boot:spring-boot-gradle-plugin:1.2.7.RELEASE"

        )

    }
}


allprojects {

    apply plugin: "java"
    apply plugin: "idea"
    apply plugin: 'maven'

    repositories {
        mavenLocal()
        //mavenCentral()
        maven { url "http://192.168.0.169:8081/nexus/content/groups/public/" }
    }

    gradle.projectsEvaluated {
        tasks.withType(JavaCompile) {
            options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
        }
    }
}

subprojects {

    apply plugin: "idea"
    apply plugin: "java"
    apply plugin: 'spring-boot'

    def javaVersion= 1.8

    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion

    mainClassName = ''

    task createMetaInfServices {


        def serviceDir = new File("src/main/resources/META-INF/services")

        if(!serviceDir.exists() ){
            serviceDir.mkdirs();
        }
    }

    compileJava {

        sourceCompatibility = '1.8'
        targetCompatibility = '1.8'

        options.encoding = 'UTF-8'
        options.compilerArgs = ['-Xlint:unchecked', '-Xlint:deprecation']
    }

    compileTestJava {

        sourceCompatibility = '1.8'
        targetCompatibility = '1.8'

        options.encoding = 'UTF-8'
        options.compilerArgs = ['-Xlint:unchecked', '-Xlint:deprecation']
    }

    // 定义所有的
    defaultTasks 'clean', 'jar'


    dependencies {

        compile('javax.inject:javax.inject:1')

        compile('org.apache.commons:commons-lang3:3.4')

        compile ("org.springframework.boot:spring-boot-starter:$bootVersion")
        compile ("org.springframework.boot:spring-boot-starter-web:$bootVersion")
        compile ("org.springframework.boot:spring-boot-starter-actuator:$bootVersion")

        testCompile ("org.springframework.boot:spring-boot-starter-test:$bootVersion" )

    }

}
